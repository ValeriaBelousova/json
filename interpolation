from osgeo import gdal
from osgeo import ogr
from osgeo import osr

import os

poi_shp = "W:/Big_Project/__MAPS/!Current/_06_June_21/VB/atmo/openweather_temp/poi_shp/poi_atmo_msk_3395.shp"

pts = ogr.Open(poi_shp, 0)
layer = pts.GetLayer()

for field in layer.schema:
    print(field.name)
    
example_tif = "W:/Big_Project/__MAPS/!Current/_06_June_21/VB/atmo/openweather_temp/Natural_shp_3395.tif"

dem = gdal.Open(example_tif)
gt = dem.GetGeoTransform()

ulx = gt[0]
uly = gt[3]
res = gt[1]
print("ulx", ulx, "uly", uly, "res", res)

xsize = dem.RasterXSize
ysize = dem.RasterYSize
print("xsize", xsize, "ysize", ysize)

lrx = ulx + xsize * res
lry = uly - ysize * res
print("lrx", lrx, "lry", lry)

dem = None

out_raster = "W:/Big_Project/__MAPS/!Current/_06_June_21/VB/atmo/openweather_temp"

nn = gdal.Grid(os.path.join(out_raster, "invdist.tif"), poi_shp, outputType = gdal.GDT_Float32, format='GTiff', zfield="temp",
               algorithm = "invdist",
               width = xsize, height = ysize)

nn = None
'''
nn = gdal.Grid(os.path.join(out_raster, "nearest_temp_3395.tif"), poi_shp, format='GTiff', zfield="temp",
               algorithm = "nearest", outputBounds = [ulx,uly,lrx,lry],
               width = xsize, height = ysize)

nn = None
# inverse distance to a power
idw = gdal.Grid(os.path.join(out_raster, "invdist.tif"), "points.shp", format='GTiff', zfield = "elevation",
                algorithm = "invdist:power=3:radius1=2000:radius2=2000",
                outputBounds = [ulx,uly,lrx,lry],
                width = xsize, height = ysize)
idw = None
'''

temp_dem = gdal.Open(os.path.join(out_raster, "invdist.tif"))
temp_dem_band1 = temp_dem.GetRasterBand(1)
wkt = temp_dem.GetProjection()
print(wkt)
proj = osr.SpatialReference(wkt)
print(proj)

contourPath = "W:/Big_Project/__MAPS/!Current/_06_June_21/VB/atmo/openweather_temp/contour_shp/contour.shp"
contourDs = ogr.GetDriverByName("ESRI Shapefile").CreateDataSource(contourPath)
contourShp = contourDs.CreateLayer('contour', proj)

fieldDef = ogr.FieldDefn("ID", ogr.OFTInteger)
contourShp.CreateField(fieldDef)
fieldDef = ogr.FieldDefn("value", ogr.OFTReal)
contourShp.CreateField(fieldDef)

gdal.ContourGenerate(temp_dem_band1, 0.5, 11, [], 0, 0, contourShp, 0, 1)
contourDs.Destroy()
